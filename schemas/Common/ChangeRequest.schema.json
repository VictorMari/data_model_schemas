{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "ChangeRequest.schema.json",
  "title": "ChangeRequest",
  "definitions": {
    "ChangeRequest": {
      "type": "object",
      "description": "Change Request is a type of request which can be used for the management and control of Change Management \nprocess between a customer and a service provider or between a service provider and a partner and vice versa.",
      "properties": {
        "href": {
          "type": "string",
          "format": "uri",
          "description": "Hyperlink to access a change request"
        },
        "id": {
          "type": "string",
          "description": "Identifier of a Change Request. It is created on repository side (a Change Management system)"
        },
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "$ref": "Uri.schema.json#/definitions/Uri",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class Extensible name"
        },
        "actualEndTime": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time when the change implementation actually finished"
        },
        "actualStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time when the change implementation actually started"
        },
        "attachment": {
          "type": "array",
          "items": {
            "$ref": "AttachmentRefOrValue.schema.json#/definitions/AttachmentRefOrValue"
          },
          "description": "The attachments of the communication message (when it is email type)"
        },
        "budget": {
          "$ref": "Money.schema.json#/definitions/Money"
        },
        "changeRelationship": {
          "type": "array",
          "items": {
            "$ref": "ChangeRequestRelationship.schema.json#/definitions/ChangeRequestRelationship"
          }
        },
        "changeRequestCharacteristic": {
          "type": "array",
          "items": {
            "$ref": "Characteristic.schema.json#/definitions/Characteristic"
          }
        },
        "channel": {
          "type": "string",
          "description": "A channel represents the way the Change Request was created"
        },
        "completionDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time when the change request is confirmed to be completed"
        },
        "description": {
          "type": "string",
          "description": "Description of the change request"
        },
        "externalReference": {
          "type": "array",
          "items": {
            "$ref": "ExternalReference.schema.json#/definitions/ExternalReference"
          }
        },
        "impact": {
          "type": "string",
          "description": "Indicates the impact of this change"
        },
        "impactEntity": {
          "type": "array",
          "items": {
            "$ref": "RelatedEntity.schema.json#/definitions/RelatedEntity"
          }
        },
        "lastUpdateDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time when the change request was updated"
        },
        "location": {
          "$ref": "RelatedPlaceRefOrValue.schema.json#/definitions/RelatedPlaceRefOrValue",
          "description": "A list of places (Place [*]). Used to define a place useful for the service (for example a geographical place whre the service is installed)"
        },
        "note": {
          "type": "array",
          "items": {
            "$ref": "Note.schema.json#/definitions/Note"
          }
        },
        "plannedEndTime": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time when the change implementation is planned to be finished"
        },
        "plannedStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time when the change implementation is planned to be started"
        },
        "priority": {
          "type": "string",
          "description": "Used by consumers to prioritize a change request in Change Management system"
        },
        "problemTicket": {
          "type": "array",
          "items": {
            "$ref": "ServiceProblemRef.schema.json#/definitions/ServiceProblemRef"
          }
        },
        "relatedParty": {
          "type": "array",
          "items": {
            "$ref": "RelatedParty.schema.json#/definitions/RelatedParty"
          },
          "description": "The parties involved in the change request"
        },
        "requestDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time when the change request is raised"
        },
        "requestType": {
          "type": "string",
          "description": "Indicates the type of the change request"
        },
        "resolution": {
          "$ref": "Resolution.schema.json#/definitions/Resolution"
        },
        "risk": {
          "type": "string",
          "description": "The risk to implement this change request"
        },
        "riskMitigationPlan": {
          "type": "string",
          "description": "The risk mitigation plan"
        },
        "riskValue": {
          "type": "string",
          "description": "The additional cost if the risk will happen"
        },
        "scheduledDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time that the schedule is made"
        },
        "sla": {
          "type": "array",
          "items": {
            "$ref": "SLARef.schema.json#/definitions/SLARef"
          }
        },
        "specification": {
          "$ref": "EntitySpecificationRef.schema.json#/definitions/EntitySpecificationRef"
        },
        "status": {
          "$ref": "ChangeRequestStatusType.schema.json#/definitions/ChangeRequestStatusType"
        },
        "statusChangeDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time when the change request status was changed"
        },
        "statusChangeReason": {
          "type": "string",
          "description": "Reason of the status change"
        },
        "targetEntity": {
          "type": "array",
          "items": {
            "$ref": "RelatedEntity.schema.json#/definitions/RelatedEntity"
          }
        },
        "troubleTicket": {
          "type": "array",
          "items": {
            "$ref": "TroubleTicketRef.schema.json#/definitions/TroubleTicketRef"
          }
        },
        "workLog": {
          "type": "array",
          "items": {
            "$ref": "WorkLog.schema.json#/definitions/WorkLog"
          }
        }
      },
      "allOf": [
        {
          "$ref": "Entity.schema.json#/Entity"
        }
      ]
    }
  }
}